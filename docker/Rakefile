require 'bundler/setup'
require 'pathname'
require 'yaml'

require 'rake/portile'
include Rake::Portile
Rake::Portile.target = ENV.fetch('TARGET', '/opt')
Rake::Portile.jobs = `nproc`.strip

VERSIONS = YAML.load_file(Pathname(__dir__) + 'versions.yaml')

task :default => :package

def_port('gnupg', VERSIONS.dig('gnupg', :version), depends: %i[libgpg-error libksba libassuan libgcrypt ntbtls npth]) do |r, deps|
  rpath = deps.map {|dep| "#{dep.path}/lib" }.join(?:)
  ldflags = "-Wl,-rpath,#{rpath}"

  r.files << VERSIONS.fetch(r.name).slice(:url, :sha256)
  r.configure_options = %W[--disable-nls --disable-gpgsm --disable-gpgtar --disable-wks-tools --disable-photo-viewers --disable-card-support --disable-doc --enable-rpath LDFLAGS=#{ldflags}]
end

def_port('libgpg-error', VERSIONS.dig('libgpg-error', :version)) do |r|
  r.files << VERSIONS.fetch(r.name).slice(:url, :sha256)
  r.configure_options = %W[--disable-nls --enable-shared --disable-static --with-pic --disable-doc]
end

def_port('libgcrypt', VERSIONS.dig('libgcrypt', :version), depends: %i[libgpg-error]) do |r|
  r.files << VERSIONS.fetch(r.name).slice(:url, :sha256)
  r.configure_options = %W[--enable-shared --disable-static --with-pic --disable-doc]
end

def_port('libksba', VERSIONS.dig('libksba', :version), depends: %i[libgpg-error]) do |r|
  r.files << VERSIONS.fetch(r.name).slice(:url, :sha256)
  r.configure_options = %W[--enable-shared --disable-static --with-pic --disable-doc]
end

def_port('libassuan', VERSIONS.dig('libassuan', :version), depends: %i[libgpg-error]) do |r|
  r.files << VERSIONS.fetch(r.name).slice(:url, :sha256)
  r.configure_options = %W[--enable-shared --disable-static --with-pic --disable-doc]
end

def_port('ntbtls', VERSIONS.dig('ntbtls', :version), depends: %i[libgpg-error libgcrypt libksba]) do |r|
  r.files << VERSIONS.fetch(r.name).slice(:url, :sha256)
  r.configure_options = %W[--enable-shared --disable-static --with-pic --disable-doc]
end

def_port('npth', VERSIONS.dig('npth', :version)) do |r|
  r.files << VERSIONS.fetch(r.name).slice(:url, :sha256)
  r.configure_options = %W[--enable-shared --disable-static --with-pic --disable-doc]
end

desc 'Create archive'
task :package => [:build, :'symlink:bin'] do
  archive = (Pathname(__dir__) + 'pkg').tap(&:mkpath) + 'layer.zip'
  rm_f archive

  target = Rake::Portile.target
  dirs = Rake::Portile.ports.map {|_, port| Pathname(port[:recipe].path).relative_path_from(target).to_s }

  Dir.chdir(target) do
    sh 'zip', '-yr', archive.to_s, 'bin', *dirs
  end
end

require 'bundler/setup'
require 'json'
require 'pathname'

require 'rake/portile'
include Rake::Portile
Rake::Portile.target = ENV.fetch('TARGET', '/opt')
Rake::Portile.jobs = `nproc`.strip

PUBKEY = (Pathname(__dir__) + 'gnupg.asc').read
VERSIONS = JSON.load(Pathname(__dir__) + 'versions.json')

task :default => :package

def_port('gnupg', VERSIONS.fetch('gnupg'), depends: %i[libgpg-error libksba libassuan libgcrypt ntbtls npth]) do |r, deps|
  rpath = deps.map {|dep| "#{dep.path}/lib" }.join(?:)
  ldflags = "-Wl,-rpath,#{rpath}"

  r.files << {
    gpg:{
      key: PUBKEY,
      signature_url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2.sig",
    },
    url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2",
  }
  r.configure_options = %W[--disable-nls --disable-gpgsm --disable-gpgtar --disable-wks-tools --disable-photo-viewers --disable-card-support --disable-doc --enable-rpath LDFLAGS=#{ldflags}]
end

def_port('libgpg-error', VERSIONS.fetch('libgpg-error')) do |r|
  r.files << {
    gpg:{
      key: PUBKEY,
      signature_url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2.sig",
    },
    url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2",
  }
  r.configure_options = %W[--disable-nls --enable-shared --disable-static --with-pic --disable-doc]
end

def_port('libgcrypt', VERSIONS.fetch('libgcrypt'), depends: %i[libgpg-error]) do |r|
  r.files << {
    gpg:{
      key: PUBKEY,
      signature_url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2.sig",
    },
    url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2",
  }
  r.configure_options = %W[--enable-shared --disable-static --with-pic --disable-doc]
end

def_port('libksba', VERSIONS.fetch('libksba'), depends: %i[libgpg-error]) do |r|
  r.files << {
    gpg:{
      key: PUBKEY,
      signature_url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2.sig",
    },
    url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2",
  }
  r.configure_options = %W[--enable-shared --disable-static --with-pic --disable-doc]
end

def_port('libassuan', VERSIONS.fetch('libassuan'), depends: %i[libgpg-error]) do |r|
  r.files << {
    gpg:{
      key: PUBKEY,
      signature_url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2.sig",
    },
    url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2",
  }
  r.configure_options = %W[--enable-shared --disable-static --with-pic --disable-doc]
end

def_port('ntbtls', VERSIONS.fetch('ntbtls'), depends: %i[libgpg-error libgcrypt libksba]) do |r|
  r.files << {
    gpg:{
      key: PUBKEY,
      signature_url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2.sig",
    },
    url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2",
  }
  r.configure_options = %W[--enable-shared --disable-static --with-pic --disable-doc]
end

def_port('npth', VERSIONS.fetch('npth')) do |r|
  r.files << {
    gpg:{
      key: PUBKEY,
      signature_url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2.sig",
    },
    url: "https://gnupg.org/ftp/gcrypt/#{r.name}/#{r.name}-#{r.version}.tar.bz2",
  }
  r.configure_options = %W[--enable-shared --disable-static --with-pic --disable-doc]
end

desc 'Create archive'
task :package => [:build, :'symlink:bin'] do
  archive = (Pathname(__dir__) + 'pkg').tap(&:mkpath) + 'layer.zip'
  rm_f archive

  target = Rake::Portile.target
  dirs = Rake::Portile.ports.map {|_, port| Pathname(port[:recipe].path).relative_path_from(target).to_s }

  Dir.chdir(target) do
    sh 'zip', '-yr', archive.to_s, 'bin', *dirs
  end
end
